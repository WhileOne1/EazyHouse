{"version":3,"sources":["App.js","index.js"],"names":["devicesQuery","gql","App","query","loading","error","data","devices","map","device","dangerouslySetInnerHTML","__html","name","isActive","Component","httpLink","createHttpLink","uri","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","document","getElementById"],"mappings":"2aAMA,IAAMA,E,MAAeC,GAAH,KAOGC,E,uKAEb,OACI,kBAAC,IAAD,CAAOC,MAAOH,IACT,YAA+B,IAA5BI,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAChB,GAAIF,EAAS,OAAO,4CACpB,GAAIC,EAAO,OAAO,8CAElB,IAAME,EAAUD,EAAKC,QAErB,OACI,6BACI,iDACA,6BACI,2BACI,8BAAM,wCAETA,EAAQC,KAAI,SAAAC,GAAM,OACf,2BACI,0BAAMC,wBAAyB,CAAGC,OAAS,UAAYF,EAAOG,KAAO,iCAAyBH,EAAOI,yB,GAnB5GC,a,+BCF3BC,EAAWC,YACb,CACIC,IAAK,0BAIPC,EAAS,IAAIC,IAAa,CAC5BC,KAAML,EACNM,MAAO,IAAIC,MAGfC,IAASC,OACL,kBAAC,IAAD,CAAgBN,OAAQA,GACpB,kBAAC,EAAD,OAENO,SAASC,eAAe,W","file":"static/js/main.c3aa56d4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport { Query } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\n\r\nconst devicesQuery = gql` {\r\n  devices {\r\n    name\r\n    isActive\r\n  }\r\n}`\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <Query query={devicesQuery}>\r\n                {({ loading, error, data }) => {\r\n                    if (loading) return <div>Laduje dane</div>\r\n                    if (error) return <div>Wystapil blad</div>\r\n\r\n                    const devices = data.devices;\r\n\r\n                    return (\r\n                        <div>\r\n                            <h1>GraphQL response:</h1>\r\n                            <div>\r\n                                <p>\r\n                                    <span><b>Tytul: </b></span>\r\n                                </p>\r\n                                {devices.map(device =>\r\n                                    <p >\r\n                                        <span dangerouslySetInnerHTML={{  __html:  'nazwa: ' + device.name + ' || czy podłączone: ' + device.isActive }}></span>\r\n                                    </p>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Query>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { createHttpLink } from 'apollo-link-http';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\n\r\nconst httpLink = createHttpLink(\r\n    {\r\n        uri: 'http://localhost:4000'\r\n    }\r\n)\r\n\r\nconst client = new ApolloClient({\r\n    link: httpLink,\r\n    cache: new InMemoryCache()\r\n});\r\n\r\nReactDOM.render(\r\n    <ApolloProvider client={client} >\r\n        <App />\r\n    </ApolloProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}